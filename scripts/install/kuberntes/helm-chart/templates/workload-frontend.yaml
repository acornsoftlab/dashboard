kind: Service
apiVersion: v1
metadata:
  labels:
    app: {{ .Chart.Name }}
    kore.board: frontend
  name: frontend
  namespace: {{ .Release.Namespace }}
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
    - name: http
{{- if hasKey .Values.frontend.service "nodePort" }}
      nodePort: {{ .Values.frontend.service.nodePort }}
{{- end }}
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: {{ .Chart.Name }}
    kore.board: frontend

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: {{ .Chart.Name }}
    kore.board: frontend
  name: frontend
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      kore.board: frontend
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        kore.board: frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/kore3lab/kore-board.frontend:{{ .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.frontend.resources }}
          resources: {{- toYaml .Values.frontend.resources | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
            - mountPath: /etc/nginx/conf.d/default.conf
              name: nginx-conf
              subPath: default.conf
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: kore-board-nginx
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: default.conf
                path: default.conf
      serviceAccountName: {{ .Chart.Name }}
      nodeSelector:
        "kubernetes.io/os": linux